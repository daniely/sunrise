h2 Tenants

template#tenant-row
  tr
    td
      |{{ tenant.name }}
      input type="text" placeholder="name" v-model="new_name" v-if="editMode"
    td
      |{{ tenant.description }}
    td
      |{{ tenant.unit }}
      = link_to 'Delete', '/', class: [:ui, :button, :right, :floated], 'v-on:click.prevent': 'removeTenant(tenant)'

form.ui.form
  table.ui.celled.table
    thead
      tr
        th Name
        th Description
        th Unit
    tbody
      tr is="tenant-row" v-for="tenant in tenants" :tenant="tenant"
      tr
        td
          input type="text" placeholder="name" v-model="new_name"
        td
          input type="text" placeholder="description" v-model="new_description"
        td
          = select_tag('county_tax[state]',
            options_for_select([['4', '4'], ['5', '5'], ['6', '6']]),
            prompt: 'select unit...',
            class: 'ui dropdown',
            'v-model': 'new_unit')
          = link_to 'Add Tenant', '/', class: [:ui, :button, :right, :floated], 'v-on:click.prevent': 'addTenant'

javascript:
  $(document).ready(function() {
    Vue.component('tenant-row', {
      template: '#tenant-row',
      props: ['tenant']
    })

    var vm = new Vue({
      el: 'body',
      ready: function() {
        var tenantsEndpoint = this.$resource('api/v1/tenants{/id}');

        // get item
        tenantsEndpoint.get({}).then(function (response) {
          this.$set('tenants', response.data);
        });
      },
      data: {
        tenants: [],
        new_name: '',
        new_description: ''
      },
      methods: {
        addTenant: function() {
          var newTenant = { name: this.new_name, description: this.new_description };
          var tenantsEndpoint = this.$resource('api/v1/tenants{/id}');

          tenantsEndpoint.save(newTenant).then(function (response) {
            // success callback
            this.$data.tenants.push(response.data);
          }, function (response) {
            // error callback
            console.log("error: " + response)
          });
          // clear fields
          this.new_name = '';
          this.new_description = '';
        },
        removeTenant: function(tenant) {
          var tenantsEndpoint = this.$resource('api/v1/tenants{/id}');
          // delete item
          tenantsEndpoint.delete({id: tenant.id}).then(function (response) {
            // success callback
            this.$data.tenants.$remove(tenant);
          }, function (response) {
            // error callback
            console.log("error: " + response)
          });
        },
        editTenant: function(tenant) {
        }
      }
    })

    $('select.dropdown').dropdown();
  });
