h2 Tenants

template#tenant-row
  tr
    td v-on:dblclick="editTenant(tenant)"
      span v-if="editMode === false"
        |{{ tenant.name }}
      input type="text" v-model="tenant.name" v-if="editMode"
    td v-on:dblclick="editTenant(tenant)"
      span v-if="editMode === false"
        |{{ tenant.description }}
      input type="text" v-model="tenant.description" v-if="editMode"
    td
      span v-if="editMode === false"
        = link_to 'Delete', '/', class: [:ui, :button, :small, :right, :floated, :red], 'v-on:click.prevent': 'removeTenant(tenant)'
        = link_to 'Edit', '/', class: [:ui, :button, :small, :right, :floated], 'v-on:click.prevent': 'editTenant(tenant)'
      span(v-else)
        = link_to 'Save', '/', class: [:ui, :button, :small, :right, :floated, :green], 'v-on:click.prevent': 'updateTenant(tenant)'
        = link_to 'Cancel', '/', class: [:ui, :button, :small, :right, :floated], 'v-on:click.prevent': 'cancelEdit(tenant)'

#verify-delete.ui.modal.small
  .content
    p
      'Really delete tenant
      span#tenant-name
      '?
  .actions
    .ui.cancel.button
      'No
    .ui.approve.green.right.labeled.icon.button
      'Yes
      i.checkmark.icon

form.ui.form
  table.ui.celled.table
    thead
      tr
        th Name
        th Description
        th Unit
    tbody
      tr is="tenant-row" v-for="tenant in tenants" :tenant="tenant"
      tr
        td
          input type="text" placeholder="name" v-model="new_name"
        td
          input type="text" placeholder="description" v-model="new_description"
        td
          = select_tag('county_tax[state]',
            options_for_select([['4', '4'], ['5', '5'], ['6', '6']]),
            prompt: 'select unit...',
            class: 'ui dropdown',
            'v-model': 'new_unit')
          = link_to 'Add Tenant', '/', class: [:ui, :button, :right, :floated], 'v-on:click.prevent': 'addTenant'

javascript:
  $(document).ready(function() {
    Vue.component('tenant-row', {
      template: '#tenant-row',
      props: ['tenant'],
      data: function() {
        return {
          editMode: false,
          prev_name: '',
          prev_description: ''
        }
      },
      methods: {
        removeTenant: function(tenant) {
          var self = this;
          $('#tenant-name').text(tenant.name);

          $('#verify-delete').modal({
            onApprove: function() {
              var tenantsEndpoint = self.$resource('api/v1/tenants{/id}');
              // delete item
              tenantsEndpoint.delete({id: tenant.id}).then(function (response) {
                // success callback
                self.$parent.$data['tenants'].$remove(tenant);
              }, function (response) {
                // error callback
                console.log("error: " + response)
              });
            }
          }).modal('show');
        },
        editTenant: function(tenant) {
          this.editMode = true;
          this.prev_name = tenant.name;
          this.prev_description = tenant.description;
        },
        cancelEdit: function(tenant) {
          this.editMode = false;
          tenant.name = this.prev_name;
          tenant.description = this.prev_description;
        },
        updateTenant: function(tenant) {
          this.editMode = false;
          var self = this;

          var tenantsEndpoint = this.$resource('api/v1/tenants{/id}');
          // update item
          var updated_params = { name: tenant.name, description: tenant.description };
          tenantsEndpoint.update({id: tenant.id}, { tenant: updated_params }).then(function (response) {
            // success callback
          }, function (response) {
            // error callback
            console.log("error: " + response)
          });
        }
      }
    })

    var vm = new Vue({
      el: 'body',
      ready: function() {
        var tenantsEndpoint = this.$resource('api/v1/tenants{/id}');

        // get item
        tenantsEndpoint.get({}).then(function (response) {
          this.$set('tenants', response.data);
        });
      },
      data: {
        tenants: [],
        new_name: '',
        new_description: ''
      },
      methods: {
        addTenant: function() {
          var newTenant = { name: this.new_name, description: this.new_description };
          var tenantsEndpoint = this.$resource('api/v1/tenants{/id}');

          tenantsEndpoint.save(newTenant).then(function (response) {
            // success callback
            this.$data.tenants.push(response.data);
          }, function (response) {
            // error callback
            console.log("error: " + response)
          });
          // clear fields
          this.new_name = '';
          this.new_description = '';
        }
      }
    })

    $('select.dropdown').dropdown();
  });
